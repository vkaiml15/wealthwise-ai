"""
Amazon Q Business Integration Service
For Anonymous Mode (No TVM needed)
"""

import os
import boto3
from typing import Dict, Any, Optional
import json

class QBusinessService:
    """Service to interact with Amazon Q Business"""
    
    def __init__(self):
        """Initialize Q Business client"""
        self.application_id = os.getenv('Q_BUSINESS_APPLICATION_ID', '5ec5ed78-be26-4395-afdf-75c9a6a09e3a')
        self.region = os.getenv('AWS_REGION', 'us-east-1')
        
        # Initialize Q Business client using your existing AWS credentials
        self.client = boto3.Session(profile_name='my-dev-profile').client(
            'qbusiness',
            region_name=self.region
        )
        
        print(f"✅ Q Business Service initialized (App ID: {self.application_id})")
    
    

    
    def list_conversations(self, user_id: str, max_results: int = 10) -> Dict[str, Any]:
        """List conversations for a user"""
        try:
            response = self.client.list_conversations(
                applicationId=self.application_id,
                userId=user_id,
                maxResults=max_results
            )
            
            return {
                'success': True,
                'conversations': response.get('conversations', [])
            }
        except Exception as e:
            print(f"❌ Error listing conversations: {e}")
            return {
                'success': False,
                'error': str(e),
                'conversations': []
            }
    
    def delete_conversation(self, conversation_id: str, user_id: str) -> Dict[str, Any]:
        """Delete a conversation"""
        try:
            self.client.delete_conversation(
                applicationId=self.application_id,
                conversationId=conversation_id,
                userId=user_id
            )
            
            return {'success': True}
        except Exception as e:
            print(f"❌ Error deleting conversation: {e}")
            return {
                'success': False,
                'error': str(e)
            }


# Singleton instance
_qbusiness_service = None

def get_qbusiness_service() -> QBusinessService:
    """Get or create Q Business service instance"""
    global _qbusiness_service
    if _qbusiness_service is None:
        _qbusiness_service = QBusinessService()
    return _qbusiness_service
